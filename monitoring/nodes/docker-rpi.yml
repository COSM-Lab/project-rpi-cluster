---
- name: Docker installation
  hosts: pilot-9
  gather_facts: false
  become: true
  tasks:
  
  - name: Install necessary packages
    apt:
      name:
        - ntpdate
        - python3-pip
        # - apt-transport-https
        # - ca-certificates 
        # - curl 
        # - software-properties-common
      state: present

  # ### TODO: Not to be hardcoded
  # - name: Sync time with ntpdate
  #   shell: sudo ntpdate -s 100.100.100.100

  - name: Populate service facts
    ansible.builtin.service_facts:

  # - name: Docker installation workflow
  #   block:
  #   - name: Add docker gpg key
  #     ansible.builtin.apt_key:
  #       url:  https://download.docker.com/linux/raspbian/gpg
  #       state: present
  #       validate_certs: no

  #   - name: Download docker.sh installer
  #     get_url:
  #       url: https://get.docker.com/
  #       dest: ~/docker.sh
  #       validate_certs: no


  #   - name: Change file ownership, group and permissions
  #     ansible.builtin.file:
  #       path:  ~/docker.sh
  #       owner: pilot
  #       group: pilot
  #       mode: u+x,g-x

  #   - name: Change curl insecure connection
  #     ansible.builtin.lineinfile:
  #       path: ~/docker.sh
  #       regexp: '\$sh_c \"curl -fsSL \\\"\$DOWNLOAD_URL/linux/\$lsb_dist/gpg\\\" \| apt-key add -qq - >/dev/null\"'
  #       line: '$sh_c "curl -k -fsSL \"$DOWNLOAD_URL/linux/$lsb_dist/gpg\" | apt-key add -qq -"'

  #   - name: Run a docker installation script 
  #     shell:  ~/docker.sh
          
  #   - name: Add the user 'pilot' appending the group 'docker'
  #     ansible.builtin.user:
  #       name: pilot
  #       groups: docker
  #       append: yes
  #   when: "'docker' not in services"


  - name: Install ansible python packages
    pip:
      name:
        - docker-py
        - requests
      executable: pip3

  - name: Start node-exporter container 
    docker_container:
      name: node-exporter
      image: quay.io/prometheus/node-exporter:latest
      state: started
      restart: yes
      restart_policy: always
      network_mode: host
      pid_mode: host
      read_only: yes
      volumes:
        - /:/host:ro,rslave

